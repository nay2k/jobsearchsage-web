{"version":3,"file":"shape.js","sources":["../../../../src/components/bullet-legend/modules/shape.ts"],"sourcesContent":["import { Selection, select } from 'd3-selection'\nimport { symbol } from 'd3-shape'\nimport toPx from 'to-px'\n\n// Types\nimport { ColorAccessor } from 'types/accessor'\nimport { Symbol, SymbolType } from 'types/symbol'\n\n// Utils\nimport { getColor } from 'utils/color'\nimport { ensureArray, getString } from 'utils/data'\n\n// Constants\nimport { PATTERN_SIZE_PX } from 'styles/patterns'\n\n// Local types\nimport { BulletLegendConfigInterface } from '../config'\nimport { BulletShape, BulletLegendItemInterface } from '../types'\n\n// Size with respect to the viewBox. We use this to compute path data which is independent of the\n// the configured size.\nconst BULLET_SIZE = PATTERN_SIZE_PX * 3\n\n// Different shapes need different scaling to fit the full size\nconst shapeScale: Record<SymbolType, number> = {\n  [BulletShape.Circle]: Math.PI / 4,\n  [BulletShape.Cross]: 5 / 9,\n  [BulletShape.Diamond]: Math.sqrt(3) / 6,\n  [BulletShape.Square]: 1,\n  [BulletShape.Star]: 0.3,\n  [BulletShape.Triangle]: Math.sqrt(3) / 4,\n  [BulletShape.Wye]: 5 / 11,\n}\n\nexport function getBulletsTotalWidth (bulletSize: number, numBullets: number, spacing: number): number {\n  if (numBullets < 1) return 0\n  return bulletSize * numBullets + spacing * (numBullets - 1)\n}\n\nexport function createBullets (\n  container: Selection<HTMLSpanElement, BulletLegendItemInterface, HTMLElement, unknown>\n): void {\n  container.each((d, i, els) => {\n    select(els[i]).append('svg')\n      .attr('width', '100%')\n      .attr('height', '100%')\n      .append('path')\n  })\n}\n\nexport function updateBullets (\n  container: Selection<SVGElement, BulletLegendItemInterface, HTMLElement, unknown>,\n  config: BulletLegendConfigInterface,\n  colorAccessor: ColorAccessor<BulletLegendItemInterface>\n): void {\n  container.each((d, i, els) => {\n    const shape = getString(d, config.bulletShape, i) as BulletShape\n    const colors = ensureArray(d.color ?? getColor(d, colorAccessor, i))\n    const numBullets = colors.length\n    const bulletWidth = BULLET_SIZE\n    const defaultBulletSize = toPx(getComputedStyle(els[i]).getPropertyValue('--vis-legend-bullet-size'))\n    const spacing = config.bulletSpacing * (BULLET_SIZE / defaultBulletSize) // Scale spacing relative to bullet size\n    const width = getBulletsTotalWidth(bulletWidth, numBullets, spacing)\n    const height = shape === BulletShape.Line ? BULLET_SIZE / 2.5 : BULLET_SIZE\n\n    const selection = select(els[i]).select('svg')\n      .attr('viewBox', `0 0 ${width} ${height}`)\n\n    // Remove existing paths\n    selection.selectAll('path').remove()\n\n    const opacity = d.inactive ? 'var(--vis-legend-bullet-inactive-opacity)' : 1\n\n    // Create a path for each color\n    colors.forEach((color, colorIndex) => {\n      const bulletPath = selection.append('path')\n\n      if (shape === BulletShape.Line) {\n        const x1 = colorIndex * (bulletWidth + spacing)\n        const x2 = x1 + bulletWidth\n        bulletPath\n          .attr('d', `M${x1},${height / 2} L${x2},${height / 2}`)\n          .attr('transform', null)\n          .style('opacity', opacity)\n          .style('stroke', color)\n          .style('stroke-width', '3px')\n          .style('fill', null)\n          .style('fill-opacity', null)\n          .style('marker-start', 'none')\n          .style('marker-end', 'none')\n      } else {\n        const symbolGen = symbol()\n          .type(Symbol[shape])\n          .size(bulletWidth * height * shapeScale[shape])\n\n        const scale = (bulletWidth - 2) / bulletWidth\n        let dy = height / 2\n        switch (shape) {\n          case BulletShape.Triangle:\n            dy += height / 8\n            break\n          case BulletShape.Star:\n            dy += height / 16\n            break\n          case BulletShape.Wye:\n            dy -= height / 16\n            break\n        }\n\n        const dx = colorIndex * (bulletWidth + spacing) + bulletWidth / 2\n        bulletPath\n          .attr('d', symbolGen)\n          .attr('transform', `translate(${dx}, ${Math.round(dy)}) scale(${scale})`)\n          .style('stroke', color)\n          .style('stroke-width', '1px')\n          .style('opacity', null)\n          .style('fill', color)\n          .style('fill-opacity', opacity)\n      }\n    })\n  })\n}\n"],"names":[],"mappings":"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"}