{"version":3,"file":"index.js","sources":["../../../src/components/plotline/index.ts"],"sourcesContent":["import { Selection } from 'd3-selection'\n\n// Utils\nimport { smartTransition } from 'utils/d3'\n\n// Core\nimport { XYComponentCore } from 'core/xy-component'\nimport { AxisType } from 'components/axis/types'\n\n// Config\nimport { LINE_STYLE, VERTICAL_X, HORIZONTAL_X, VERTICAL_Y, HORIZONTAL_Y } from './constants'\nimport { PlotlineDefaultConfig, PlotlineConfigInterface } from './config'\nimport { PlotlineLabelPosition, PlotlineLabelOrientation, PlotlineLabelLayout, PlotlineLayoutValue } from './types'\n\n// Styles\nimport * as s from './style'\n\nexport class Plotline<Datum> extends XYComponentCore<Datum, PlotlineConfigInterface<Datum>> {\n  static selectors = s\n  protected _defaultConfig = PlotlineDefaultConfig as PlotlineConfigInterface<Datum>\n  value: number | null | undefined\n  plotline: Selection<SVGLineElement, unknown, null, undefined>\n  label: Selection<SVGTextElement, unknown, null, undefined>\n\n  constructor (config: PlotlineConfigInterface<Datum>) {\n    super()\n    if (config) this.setConfig(config)\n\n    this.plotline = this.g\n      .append('line')\n      .attr('class', s.plotline)\n\n    this.label = this.g\n      .append('text')\n      .attr('class', s.label)\n  }\n\n  _render (customDuration?: number): void {\n    super._render(customDuration)\n    const { config } = this\n    this.value = config.value\n\n    let strokeDashArray\n\n    if (typeof config?.lineStyle === 'string') {\n      strokeDashArray = LINE_STYLE[config.lineStyle]\n    } else if (Array.isArray(config.lineStyle)) {\n      strokeDashArray = config.lineStyle.join(',')\n    } else {\n      strokeDashArray = 'none'\n    }\n\n    this.value = config.value\n\n    this.plotline\n      .attr('stroke-opacity', 1)\n      .style('stroke-width', config.lineWidth)\n      .style('stroke-dasharray', strokeDashArray)\n      .style('stroke', config.color)\n\n    let x1 = 0\n    let x2 = 0\n    let y1 = 0\n    let y2 = 0\n\n    if (config.axis === AxisType.Y) {\n      y1 = this.yScale(this.value)\n      y2 = this.yScale(this.value)\n      x1 = 0\n      x2 = this._width\n    } else {\n      y1 = 0\n      y2 = this._height\n      x1 = this.xScale(this.value)\n      x2 = this.xScale(this.value)\n    }\n\n    smartTransition(this.plotline, config.duration)\n      .attr('x1', x1)\n      .attr('x2', x2)\n      .attr('y1', y1)\n      .attr('y2', y2)\n\n    if (config.labelText) {\n      const labelProps = this.computeLabel(\n        config.axis,\n        x2,\n        y2,\n        config.labelPosition,\n        config.labelOffsetX,\n        config.labelOffsetY,\n        config.labelOrientation\n      )\n\n      this.label\n        .text(config.labelText)\n        .attr('transform', labelProps.transform)\n        .attr('dominant-baseline', labelProps.dominantBaseline)\n        .style('fill', config.labelColor)\n        .style('text-anchor', labelProps.textAnchor)\n        .style('font-size', config.labelSize ? `${config.labelSize}px` : undefined)\n\n      smartTransition(this.label, config.duration)\n        .attr('x', labelProps.x)\n        .attr('y', labelProps.y)\n    }\n\n    smartTransition(this.plotline.exit())\n      .style('opacity', 0)\n      .remove()\n  }\n\n  private computeLabel (\n    axis: AxisType | string,\n    width: number,\n    height: number,\n    position: PlotlineLabelPosition,\n    offsetX: number,\n    offsetY: number,\n    orientation: PlotlineLabelOrientation\n  ): PlotlineLabelLayout {\n    const isVertical = orientation === PlotlineLabelOrientation.Vertical\n    const rotation = isVertical ? -90 : 0\n\n    let layout: PlotlineLayoutValue\n\n    if (axis === AxisType.X) {\n      const map = isVertical ? VERTICAL_X : HORIZONTAL_X\n      layout = map[position]({ width, height, offsetX, offsetY })\n    } else {\n      const map = isVertical ? VERTICAL_Y : HORIZONTAL_Y\n      layout = map[position]({ width, height, offsetX, offsetY })\n    }\n\n    const transform = rotation ? `rotate(${rotation}, ${layout.x}, ${layout.y})` : ''\n\n    return {\n      ...layout,\n      rotation,\n      transform,\n    }\n  }\n}\n"],"names":["s.plotline","s.label","s"],"mappings":"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"}